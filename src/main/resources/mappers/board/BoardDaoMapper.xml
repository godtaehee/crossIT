<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.crossit.dao.BoardDao">

	<sql id="boardColumns">
		id
		, title
		, content
		, writer
		, view_cnt
		, notice_yn
		, secret_yn
		, delete_yn
		, insert_time
		, update_time
		, delete_time
		, category
	</sql>

	<insert id="insertBoard" parameterType="BoardDTO" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO board (
		<include refid="boardColumns"/>
		) VALUES (
		#{id}
		, #{title}
		, #{content}
		, #{writer}
		, 0
		, IFNULL(#{noticeYn}, 'N')
		, IFNULL(#{secretYn}, 'N')
		, 'N'
		, NOW()
		, NULL
		, NULL
		,#{category}
		)
	</insert>

	<select id="selectBoardDetail" parameterType="long" resultType="BoardDTO">
		SELECT
		<include refid="boardColumns"/>
		FROM
		board
		WHERE
		delete_yn = 'N'
		AND
		id = #{id}
	</select>

	<update id="updateBoard" parameterType="BoardDTO">
		UPDATE board
		SET update_time = NOW()
		  , title       = #{title}
		  , content     = #{content}
		  , writer      = #{writer}
		  , notice_yn   = IFNULL(#{noticeYn}, 'N')
		  , secret_yn   = IFNULL(#{secretYn}, 'N')
		WHERE id = #{id}
	</update>

	<update id="deleteBoard" parameterType="long">
		UPDATE board
		SET delete_yn   = 'Y'
		  , delete_time = NOW()
		WHERE id = #{id}
	</update>

	<select id="selectBoardList" parameterType="BoardDTO" resultType="BoardDTO">
		SELECT
		<include refid="boardColumns"/>
		FROM
		board
		WHERE
		delete_yn = 'N'
		<include refid="CommonMapper.search"/>
		ORDER BY
		notice_yn ASC,
		id DESC,
		insert_time DESC
		<include refid="CommonMapper.paging"/>
	</select>

	<select id="selectBoardTotalCount" parameterType="Criteria" resultType="long">
		SELECT
		COUNT(*)
		FROM
		board
		WHERE
		delete_yn = 'N'
		<include refid="CommonMapper.search"/>
	</select>

	<select id="getList" resultType="BoardDTO">
		SELECT
		<include refid="boardColumns"/>
		FROM
		board
		WHERE
		delete_yn = 'N'
		<include refid="CommonMapper.search"/>
		ORDER BY
		notice_yn ASC,
		id DESC,
		insert_time DESC
	</select>

	<select id="getListByJob" resultType="BoardListViewByJob">
		SELECT
		b.id,
		b.title,
		b.content,
		b.writer,
		b.view_cnt,
		b.notice_yn,
		b.secret_yn,
		b.insert_time,
		b.update_time,
		b.delete_time,
		b.category,
		m.job
		FROM board as b
		left join
		member as m
		on b.writer = m.nickname
		WHERE
		delete_yn = 'N'
		ORDER BY
		notice_yn ASC,
		id DESC,
		insert_time DESC
	</select>

</mapper>


